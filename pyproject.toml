[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "macbot"
version = "1.0.0"
description = "Local AI Voice Assistant for macOS with offline LLM support"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
authors = [
    {name = "MacBot Team", email = "info@macbot.local"},
]
maintainers = [
    {name = "MacBot Team", email = "info@macbot.local"},
]
keywords = ["ai", "voice-assistant", "llm", "macos", "offline", "whisper", "tts"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.21.0",
    "sounddevice>=0.4.0",
    "soundfile>=0.10.0",
    "PyYAML>=6.0",
    "requests>=2.25.0",
    "psutil>=5.8.0",
    "flask>=2.0.0",
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "kokoro>=0.9.4",
    "livekit-agents[turn-detector]>=1.2.0",
    "websockets>=10.0",
    "python-socketio>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
macbot = "macbot.cli:main"
macbot-orchestrator = "macbot.orchestrator:main"
macbot-dashboard = "macbot.web_dashboard:main"
macbot-rag = "macbot.rag_server:main"

[project.urls]
Homepage = "https://github.com/lukifer23/MacBot"
Repository = "https://github.com/lukifer23/MacBot"
Issues = "https://github.com/lukifer23/MacBot/issues"
Documentation = "https://github.com/lukifer23/MacBot/blob/main/README.md"

[tool.setuptools]
packages = ["macbot"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
macbot = ["*.yaml", "*.yml", "*.json", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | llama\.cpp
  | whisper\.cpp
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sounddevice.*",
    "soundfile.*",
    "kokoro.*",
    "chromadb.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
